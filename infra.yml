AWSTemplateFormatVersion: 2010-09-09
Description: DevOps test App Frontend S3 and Cloudfront

Parameters:
  Project:
    Type: String
    Default: devops-ibolit
  Environment:
    Type: String
    Default: qa
    AllowedValues:
      - staging
      - prod
      - qa
    ConstraintDescription: Must be staging, qa or prod

# Create ACM and let Route53 record point to CloudFront
Mappings:
  EnvironmentMap:
    staging:
      domain: app.stillnight.kr.ua
      acm: 895b8132-7b9c-4313-95b2-36063bd01172
    prod:
      domain: app.stillnight.kr.ua
      acm: 895b8132-7b9c-4313-95b2-36063bd01172
    qa:
      domain: dev-test.stillnight.kr.ua
      acm: fc03bb95-c592-4fe8-a21f-90da28036410

Resources:
  Website:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !FindInMap [EnvironmentMap, !Ref Environment, domain]
      AccessControl: PublicRead
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        ErrorDocument: index.html
        IndexDocument: index.html
  WebsitePolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Website
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
            Effect: Allow
            Resource: !Sub arn:aws:s3:::${Website}/*
            Principal: '*'
  CachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Sub ${AWS::StackName}-CachePolicy
        MinTTL: 1800
        MaxTTL: 3600
        DefaultTTL: 3600
        ParametersInCacheKeyAndForwardedToOrigin:
          HeadersConfig:
            HeaderBehavior: none
          CookiesConfig:
            CookieBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none
          EnableAcceptEncodingGzip: true
          EnableAcceptEncodingBrotli: true
  Distribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - CachePolicy
    Properties:
      DistributionConfig:
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt Website.RegionalDomainName
            Id: !Ref Website
            S3OriginConfig:
              OriginAccessIdentity: ''
        Aliases:
          - !Ref Website
          - !Sub
            - www.${domain}
            - domain: !Ref Website
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          Compress: true
          TargetOriginId: !Ref Website
          CachePolicyId: !Ref CachePolicy
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - POST
            - PATCH
            - DELETE
        CustomErrorResponses:
          - ErrorCachingMinTTL: 300
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCachingMinTTL: 300
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        ViewerCertificate:
          AcmCertificateArn: !Sub
            - arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/${AcmCertificate}
            - {AcmCertificate: !FindInMap [EnvironmentMap, !Ref Environment, acm]}
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019

Outputs:
  WebsiteUrl:
    Value: !GetAtt Website.WebsiteURL
  WebsiteBucket:
    Value: !Ref Website
    Export:
      Name: !Sub ${Project}-Website-Bucket